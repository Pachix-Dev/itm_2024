---
import i18next from 'i18next'

interface Speaker {
  id?: string
  name: string
  position: string
  company: string
  image?: string
}

interface Program {
  title: string
  title_en?: string
  description: string
  description_en?: string
  time: string
  duration: string
  speakers: Speaker[]
}

interface Props {
  item: Program
  key: string
}

function formatString(input: string): string {
  return input
    .trim()
    .trim()
    .toLowerCase()
    .normalize('NFD')
    .replace(/[\u0300-\u036f]/g, '')
    .replace(/\s+/g, '-')
}

const { item, key } = Astro.props as Props
---

<article>


<div class="flex sm:flex-row flex-col border-b-2 border-b-red-500 from-[#E42128] to-[#CF1363] mt-1">
  <div class="sm:w-full w-full my-4">
    <p class='text-3xl font-bold text-primary-500'>{item.title}</p>

    <div class='text-lg text-gray-500 flex flex-row space-x-5 my-4'>
      <div class="flex flex-row items-center gap-2">
        <svg xmlns="http://www.w3.org/2000/svg" width="25" height="25" viewBox="0 0 24 24"><g fill="none" stroke="#ffffff" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"><circle cx="12" cy="12" r="10"/><path d="M12 6v6l4 2"/></g></svg>
        {item.time}
      </div>
      <div class="flex flex-row items-center gap-2">
        <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 16 16"><path fill="#ffffff" d="M11.39 8C13.542 6.635 15 4.012 15 1c0-.339-.019-.672-.054-1H1.055a9.155 9.155 0 0 0-.054 1c0 3.012 1.457 5.635 3.609 7c-2.152 1.365-3.609 3.988-3.609 7c0 .339.019.672.054 1h13.891c.036-.328.054-.661.054-1c0-3.012-1.457-5.635-3.609-7zM2.5 15c0-2.921 1.253-5.397 3.5-6.214V7.214C3.753 6.397 2.5 3.92 2.5 1h11c0 2.921-1.253 5.397-3.5 6.214v1.572c2.247.817 3.5 3.294 3.5 6.214zm7.182-4.538C8.562 9.827 8.501 9.003 8.5 8.503V7.499c0-.5.059-1.327 1.184-1.963c.602-.349 1.122-.88 1.516-1.537H4.8c.395.657.916 1.188 1.518 1.538c1.12.635 1.181 1.459 1.182 1.959V8.5c0 .5-.059 1.327-1.184 1.963c-1.135.659-1.98 1.964-2.236 3.537h7.839c-.256-1.574-1.102-2.879-2.238-3.538z"/></svg>
        {item.duration}
      </div>
    </div>
    <p class='text-lg text-gray-500'>{item.description}</p>
    {
      item.speakers.length === 0 ? (
        ''
      ) : (
        <p class="mt-2 font-extrabold">Panelistas: </p>

        <ul class="mt-2 ms-2 gap-2 grid grid-cols-2">
          {item.speakers.map((speaker) => (
            <li class="mt-2 ">
              <a
              href={`/ponentes-itm/${speaker.id}`}
              class="flex items-center gap-2">
                <img                 
                  class='w-16 h-16 rounded-full object-cover'
                  src={speaker.image}
                  alt={speaker.name}
                />
                <p>
                  {speaker.name}<br />
                  {speaker.position} {speaker.company}
                </p>
              </a>
            </li>
          ))}
        </ul>
        
      )
    }

  </div>
</div>

</article>
