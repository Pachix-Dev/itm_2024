---
import i18next, { changeLanguage, t } from "i18next";
import programs from "../data/constans_program_vip";
import Button from "../components/schedule/Button.astro";
import Conference from "../components/schedule/Conference.astro";
import Layout from "../layouts/Layout.astro";
import { logosProgramVip } from "../data/constans_logos.js";

changeLanguage("es");

const base = i18next.language === "es" ? "" : `/${i18next.language}`;
---

<Layout title='SUMMIT CCE'>
  <main class='mt-10 mx-auto py-10 container px-4'>
    <section class='mb-10 max-w-screen-lg mx-auto flex gap-6'>
      {
        logosProgramVip.map((logo) => (
          <a
            href={logo.link}
            target='_blank'
            class='bg-white rounded-2xl grid place-items-center p-2'
          >
            <img src={logo.src} alt={logo.alt} width='200' />
          </a>
        ))
      }
    </section>
    <section class='mt-20'>
      <h1
        class='text-white text-3xl md:text-5xl leading-snug font-extrabold text-center uppercase'
      >
        {t('programaSummiTCCE.title')}
        <br />CCE - CONCAMIN - ITM - AMOF
      </h1>
      <p class='mt-5 text-center font-bold text-lg md:text-2xl uppercase'>
        {t('programaSummiTCCE.text_1')}
      </p>
      <p
        class='text-[#E42128] text-center font-bold text-lg md:text-2xl uppercase'
      >
        {t('programaSummiTCCE.text_2')}
      </p>
      <p class='text-center uppercase'>{t('programaSummiTCCE.text_3')}</p>
      {
        /*<a
        href={`${base}/acceso-programa`}
        class='card p-5 hover:scale-105 ease-in-out duration-300 mx-auto mt-10'
      >
        <span class='text-white z-10 font-extrabold text-xl'>
          {t('programaSummiTCCE.get_vip')}</span
        >
      </a> */
      }
      <p class='card p-5 ease-in-out duration-300 mx-auto mt-10'>
        <span class='text-white z-10 font-extrabold text-xl'>
          {t('programaSummiTCCE.get_vip')}</span
        >
      </p>
      <p class='italic my-5 text-center text-2xl'>{t('program.changes')}</p>
      <p class='italic my-5 text-center text-2xl'>{t('program.invitation')}</p>
      <div class='square_red w-fit font-bold p-2'>{t('program.tuesday')}</div>
      <div class='mt-5 flex gap-8'>
        <div>18:30</div>
        <div class='text-lg' set:html={t('program.industry')} />
      </div>
      <div class='flex gap-8 mt-2'>
        <div>20:00</div>
        <div class='text-lg' set:html={t('program.industry_1')} />
      </div>
    </section>
    <section class='mt-20'>
      <div class='md:ml-5'>
        <Button id='stage-1'>{t('programaSummiTCCE.room_1')}</Button>
        <Button id='stage-2'>{t('programaSummiTCCE.room_2')}</Button>
      </div>
      <div
        class='w-full bg-gradient-to-br from-[#E42128] to-[#CF1363] h-[1px] mt-1 mb-3 rounded-sm'
      >
      </div>
      <div class='md:ml-5 *:w-full md:*:w-fit'>
        <Button id='day-1'
          >{t('program.day')} 1<br />{t('program.day_1')}, 9 {
            t('program.month')
          }</Button
        >
        <Button id='day-2'
          >{t('program.day')} 2<br />{t('program.day_2')}, 10 {
            t('program.month')
          }</Button
        >
      </div>
      {
        programs.map((program) => (
          <section
            class='mt-5 hidden'
            id={`program-${program.stage}-${program.day}`}
          >
            {program.conferences.map((item, key) => (
              <Conference
                item={item}
                key={program.stage + '-' + program.day + '-' + key}
              />
            ))}
          </section>
        ))
      }
    </section>
  </main>
</Layout>
<style>
  body {
    background-color: black;
    color: white;
  }
  .card {
    width: fit-content;
    background: #f6f6f6;
    position: relative;
    display: flex;
    place-content: center;
    place-items: center;
    overflow: hidden;
    border-radius: 20px;
  }

  .card::before {
    content: '';
    position: absolute;
    width: 250px;
    background-image: linear-gradient(45deg, rgb(0, 183, 255), #e42128);
    height: 30px;
    animation: rotBGimg 3s linear infinite;
    transition: all 0.2s linear;
  }

  @keyframes rotBGimg {
    from {
      transform: rotate(0deg);
    }

    to {
      transform: rotate(360deg);
    }
  }

  .card::after {
    content: '';
    position: absolute;
    background: #e42128;
    inset: 5px;
    border-radius: 15px;
  }
</style>

<script>
  const state = {
    stage: 1,
    day: 1,
  }
  const url = new URL(window.location.href)

  function showProgram(stage: number, day: number) {
    if (state.stage === stage && state.day === day) return

    let programElement
    programElement = document.getElementById(
      `program-${state.stage}-${state.day}`
    )
    if (programElement !== null) {
      programElement.style.display = 'none'
    }
    programElement = document.getElementById(`program-${stage}-${day}`)
    if (programElement !== null) {
      programElement.style.display = 'block'
    }

    url.searchParams.set('stage', stage.toString())
    url.searchParams.set('day', day.toString())
    window.history.pushState({}, '', url)

    state.stage = stage
    state.day = day
  }

  function changeOpacityStageBts(stage: number) {
    document
      .getElementById('stage-1')
      ?.firstElementChild?.classList.remove('bg-opacity-0')
    document
      .getElementById('stage-2')
      ?.firstElementChild?.classList.remove('bg-opacity-0')
    document
      .getElementById(`stage-${stage}`)
      ?.firstElementChild?.classList.add('bg-opacity-0')
  }

  function changeOpacityDayBts(day: number) {
    document
      .getElementById('day-1')
      ?.firstElementChild?.classList.remove('bg-opacity-0')
    document
      .getElementById('day-2')
      ?.firstElementChild?.classList.remove('bg-opacity-0')
    document
      .getElementById(`day-${day}`)
      ?.firstElementChild?.classList.add('bg-opacity-0')
  }

  function initProgram() {
    const stage = Number(url.searchParams.get('stage')) || 1
    const day = Number(url.searchParams.get('day')) || 1

    state.stage = stage
    state.day = day

    const programElement = document.getElementById(`program-${stage}-${day}`)
    if (programElement) {
      programElement.style.display = 'block'
    }

    changeOpacityStageBts(stage)
    changeOpacityDayBts(day)
  }

  function main() {
    initProgram()

    document.getElementById('stage-1')?.addEventListener('click', (e) => {
      changeOpacityStageBts(1)
      showProgram(1, state.day)
    })
    document.getElementById('stage-2')?.addEventListener('click', (e) => {
      changeOpacityStageBts(2)
      showProgram(2, state.day)
    })

    document.getElementById('day-1')?.addEventListener('click', (e) => {
      changeOpacityDayBts(1)
      showProgram(state.stage, 1)
    })
    document.getElementById('day-2')?.addEventListener('click', (e) => {
      changeOpacityDayBts(2)
      showProgram(state.stage, 2)
    })
  }

  document.addEventListener('astro:page-load', main)
</script>
